--create data base
CREATE DATABASE ONLINESHOP 
USE ONLINESHOP;

-- create tables and load data
-- @block
CREATE TABLE PERSON (
    SSN CHAR(9) NOT NULL,
    TELEPHONE_NO CHAR(11) NOT NULL,
    PASSWRD VARCHAR(15) NOT NULL,
    DATE_OF_BIRTH DATE NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    USERNAME VARCHAR(20) NOT NULL,
    CONSTRAINT PERSON_PK PRIMARY KEY(SSN),
    CONSTRAINT PERSON_PASS CHECK(
        PASSWRD REGEXP '^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&+=])(?=\\S+$).{8,}$'
    ),
    CONSTRAINT PERSON_EMAIL CHECK(
        EMAIL REGEXP '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
    )
);

-- @block
LOAD DATA LOCAL INFILE './data/PERSON.csv'
INTO TABLE PERSON 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE FEEDBACK (
    FEEDBACK_ID varchar(10),
    POST_DATE date NOT NULL,
    RATING float NOT NULL,
    CONSTRAINT FEEDBACK_PK PRIMARY KEY (FEEDBACK_ID)
);

-- @block
LOAD DATA LOCAL INFILE './data/FEEDBACK.csv'
INTO TABLE FEEDBACK 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE USERS (
    SSN CHAR(9) NOT NULL,
    ISVERIFIED BIT NOT NULL,
    FEEDBACK_ID varchar(10) NULL UNIQUE,
    ACTIVE BIT NOT NULL,
    CONSTRAINT USERS_PK PRIMARY KEY(SSN),
    CONSTRAINT USERS_PERSON_FK FOREIGN KEY(SSN)
    REFERENCES PERSON(SSN) 
    ON UPDATE RESTRICT
    ON DELETE CASCADE,
    CONSTRAINT USERS_FEEDBACK_FK FOREIGN KEY(FEEDBACK_ID) 
    REFERENCES FEEDBACK(FEEDBACK_ID) 
    ON DELETE SET NULL 
    ON UPDATE RESTRICT
);

-- @block
LOAD DATA LOCAL INFILE './data/USERS.csv'
INTO TABLE USERS 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';


-- @block
CREATE TABLE SELLER (
    SELLER_SSN CHAR(9) NOT NULL,
    RATING FLOAT,
    CONSTRAINT SELLER_PK PRIMARY KEY(SELLER_SSN),
    CONSTRAINT SELLER_USER_FK FOREIGN KEY(SELLER_SSN)
    REFERENCES USERS(SSN)
    ON UPDATE RESTRICT
    ON DELETE CASCADE
);

-- @block
LOAD DATA LOCAL INFILE './data/SELLER.csv'
INTO TABLE SELLER 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';


--@block
CREATE TABLE BUYER (
    BUYER_SSN CHAR(9) NOT NULL,
    NO_OF_PURCHASES INT,
    CONSTRAINT BUYER_PK PRIMARY KEY(BUYER_SSN),
    CONSTRAINT BUYER_USER_FK FOREIGN KEY(BUYER_SSN)
    REFERENCES USERS(SSN)
    ON DELETE CASCADE
    ON UPDATE RESTRICT
);

-- @block
LOAD DATA LOCAL INFILE './data/BUYER.csv'
INTO TABLE BUYER 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';


--@block
CREATE TABLE STAFF (
    SSN CHAR(9) NOT NULL,
    HIRING_DATE DATE NOT NULL,
    SALARY INTEGER NOT NULL,
    YEARS_OF_EXPERIENCE INTEGER,
    ACCESS_KEY VARCHAR(10) NOT NULL,
    DAILY_WORK_HOURS INTEGER NOT NULL,
    CONSTRAINT STAFF_PK PRIMARY KEY(SSN),
    CONSTRAINT STAFF_PERSON_FK FOREIGN KEY(SSN)
    REFERENCES PERSON(SSN)
    ON UPDATE RESTRICT
    ON DELETE CASCADE
);

-- @block
LOAD DATA LOCAL INFILE './data/STAFF.csv'
INTO TABLE STAFF 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';


-- trigger
-- @block
CREATE TRIGGER STAFF_DISJOINT_TRIGGER
BEFORE INSERT ON STAFF
FOR EACH ROW
BEGIN
    IF (NEW.SSN IN (SELECT SSN FROM USERS)) 
    THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Disjoint constraint on STAFF violated';
    END IF;
END;

-- @block
CREATE TABLE PAYMENT (
    PAYMENT_ID varchar(10),
    AMOUNT FLOAT NOT NULL,
    DATE DATE NOT NULL,
    CONSTRAINT PAYMENT_PK PRIMARY KEY (PAYMENT_ID)
);

-- @block
LOAD DATA LOCAL INFILE './data/PAYMENT.csv'
INTO TABLE PAYMENT 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE CASH (
    PAYMENT_ID VARCHAR(10) NOT NULL,
    ADDITIONAL_FEES FLOAT,
    CONSTRAINT CASH_PK PRIMARY KEY(PAYMENT_ID),
    CONSTRAINT CASH_PAYMENT_FK FOREIGN KEY (PAYMENT_ID)
    REFERENCES PAYMENT(PAYMENT_ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT
);

-- @block
LOAD DATA LOCAL INFILE './data/CASH.csv'
INTO TABLE CASH
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE CREDIT (
    PAYMENT_ID varchar(10),
    CARD_NUMBER char(16) NOT NULL,
    CARD_TYPE VARCHAR(20) ,
    CONSTRAINT CREDIT_PK PRIMARY KEY(PAYMENT_ID),
    CONSTRAINT CREDIT_PAYMENT_FK FOREIGN KEY (PAYMENT_ID)
    REFERENCES PAYMENT(PAYMENT_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    CONSTRAINT CREDIT_CARD_NUMBER_CK 
    CHECK(CARD_NUMBER REGEXP '^[0-9]+$')
);

-- @block
LOAD DATA LOCAL INFILE './data/CREDIT.csv'
INTO TABLE CREDIT
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE DELIVERY(
    SHIPMENT_ID VARCHAR(12) NOT NULL,
    COMPANY_NAME VARCHAR(50) NOT NULL,
    DRIVER_INFO VARCHAR(50) NOT NULL,
    PROGRESS VARCHAR(50) NOT NULL,
    CURRENT_LOCATION VARCHAR(100) NOT NULL,
    ORDER_DATE DATE NOT NULL,
    CONSTRAINT DELIVERY_PK PRIMARY KEY (SHIPMENT_ID)
);

-- @block
CREATE TRIGGER TRIGGER_SHIPMENT_PROGRESS
BEFORE INSERT ON DELIVERY
FOR EACH ROW
BEGIN
    IF NEW.PROGRESS NOT IN ('NOT SHIPPED', 'DELAYED', 'SHIPPED', 'DELIVERED') 
    THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid shipment progress.';
    END IF;
END;

-- @block
LOAD DATA LOCAL INFILE './data/DELIVERY.csv'
INTO TABLE DELIVERY
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE ORDERS (
    ORDER_ID varchar(4),
    ORDER_DATE date NOT NULL,
    ORDER_STATE varchar(10) NOT NULL,
    SSN CHAR(9) NOT NULL,
    PAYMENT_ID varchar(10) NOT NULL,
    SHIPMENT_ID VARCHAR(12) NOT NULL,
    CONSTRAINT ORDERS_PK PRIMARY KEY (ORDER_ID),
    CONSTRAINT ORDERS_PAYMENT_FK FOREIGN KEY (PAYMENT_ID)
    REFERENCES Payment(PAYMENT_ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
    CONSTRAINT ORDERS_BUYER_FK FOREIGN KEY (SSN)
    REFERENCES BUYER(BUYER_SSN)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
    CONSTRAINT ORDERS_DELIVERY_FK FOREIGN KEY (SHIPMENT_ID)
    REFERENCES DELIVERY(SHIPMENT_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

-- @block
CREATE TRIGGER TRIGGER_ORDER_STATE
BEFORE INSERT ON ORDERS
FOR EACH ROW
BEGIN
    IF NEW.ORDER_STATE NOT IN ('PICKING', 'PACKING', 'SHIPPING', 'DELIVERED') 
    THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid ORDER_STATE.';
    END IF;
END;

-- @block
LOAD DATA LOCAL INFILE './data/ORDERS.csv'
INTO TABLE ORDERS
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE INVENTORY(
    INV_ID VARCHAR(12) NOT NULL,
    LOCATION VARCHAR(100) NOT NULL,
    PRIMARY KEY (INV_ID)
);

-- @block
LOAD DATA LOCAL INFILE './data/INVENTORY.csv'
INTO TABLE INVENTORY
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE CATEGORY(
    CAT_ID VARCHAR(9) NOT NULL,
    CAT_NAME VARCHAR(25) NOT NULL,
    CAT_DESCRIPTION VARCHAR(100),
    CONSTRAINT CATEGORY_PK PRIMARY KEY(CAT_ID)
);

-- @block
LOAD DATA LOCAL INFILE './data/CATEGORY.csv'
INTO TABLE CATEGORY
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE PRODUCT(
    PID VARCHAR(12) NOT NULL,
    P_NAME VARCHAR(20) NOT NULL,
    P_PRICE FLOAT NOT NULL,
    DESCRIPTION VARCHAR(100),
    CAT_ID VARCHAR(9) NOT NULL,
    CONSTRAINT PRODUCT_PK PRIMARY KEY(PID),
    CONSTRAINT PRODUCT_CATEGORY_FK FOREIGN KEY(CAT_ID)
    REFERENCES CATEGORY(CAT_ID)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);

-- @block
LOAD DATA LOCAL INFILE './data/PRODUCTS.csv'
INTO TABLE PRODUCT
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';


-- @block
CREATE TABLE STOCK(
    INV_ID VARCHAR(12) NOT NULL,
    PID VARCHAR(12) NOT NULL,
    P_QUANTITY INT NOT NULL,
    Date DATE NOT NULL,
    CONSTRAINT STOCK_PK PRIMARY KEY (INV_ID, PID),
    CONSTRAINT STOCK_PRODUCT_FK FOREIGN KEY (PID) 
    REFERENCES Product(PID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
    CONSTRAINT STOCK_INVENTORY_FK FOREIGN KEY (INV_ID)
    REFERENCES Inventory(INV_ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
    CONSTRAINT STOCK_PQUANTITY_CK
    CHECK (P_QUANTITY >= 0)
);

-- @block
LOAD DATA LOCAL INFILE './data/STOCK.csv'
INTO TABLE STOCK
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';


-- @block
CREATE TABLE REQUEST(
    ORDER_ID VARCHAR(4) NOT NULL,
    INV_ID VARCHAR(12) NOT NULL,
    PID VARCHAR(12) NOT NULL,
    QUANTITY INTEGER,
    Date DATE NOT NULL,
    PRIMARY KEY (ORDER_ID, INV_ID, PID),
    FOREIGN KEY (ORDER_ID) 
    REFERENCES ORDERS(ORDER_ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
    FOREIGN KEY (INV_ID)
    REFERENCES INVENTORY(INV_ID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
    FOREIGN KEY (PID) 
    REFERENCES PRODUCT(PID)
    ON DELETE CASCADE
    ON UPDATE RESTRICT
);

--@block
CREATE TRIGGER decrement_stock_quantity
AFTER INSERT ON REQUEST
FOR EACH ROW
BEGIN
    UPDATE STOCK
    SET P_QUANTITY = P_QUANTITY - NEW.QUANTITY
    WHERE PID = NEW.PID;
END;

-- @block
LOAD DATA LOCAL INFILE './data/REQUEST.csv'
INTO TABLE REQUEST
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE TECHNICAL_SUPPORT(
    SSN CHAR(9) NOT NULL,
    RATING FLOAT,
    CONSTRAINT TECHNICAL_SUPPORT_PK PRIMARY KEY(SSN),
    CONSTRAINT TECHNICAL_SUPPORT_STAFF_FK FOREIGN KEY(SSN)
    REFERENCES STAFF(SSN)
    ON UPDATE RESTRICT
    ON DELETE CASCADE
);

-- @block
LOAD DATA LOCAL INFILE './data/TECHNICAL_SUPPORT.csv'
INTO TABLE TECHNICAL_SUPPORT
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

--@block
CREATE TABLE RATE(
    USER_SSN CHAR(9),
    T_S_SSN CHAR(9),
    RATING_VALUE FLOAT NOT NULL,
    CONSTRAINT RATE_PK PRIMARY KEY(USER_SSN, T_S_SSN),
    CONSTRAINT RATE_TECHNICAL_SUPPORT_FK FOREIGN KEY(T_S_SSN) 
    REFERENCES TECHNICAL_SUPPORT(SSN)
    ON UPDATE RESTRICT
    ON DELETE CASCADE,
    CONSTRAINT RATE_USERS_FK FOREIGN KEY(USER_SSN)
    REFERENCES USERS(SSN)
);

-- @block
LOAD DATA LOCAL INFILE './data/RATE.csv'
INTO TABLE RATE
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE SELL(
    SSN CHAR(9),
    PID VARCHAR(12),
    CONSTRAINT SELL_PK PRIMARY KEY(SSN, PID),
    CONSTRAINT SELL_SELLER_FK FOREIGN KEY(SSN) 
    REFERENCES SELLER(SELLER_SSN)
    ON UPDATE RESTRICT
    ON DELETE RESTRICT,
    CONSTRAINT SELL_PRODUCT_FK FOREIGN KEY(PID)
    REFERENCES PRODUCT(PID)
    ON UPDATE RESTRICT
    ON DELETE RESTRICT
);

-- @block
LOAD DATA LOCAL INFILE './data/SELL.csv'
INTO TABLE SELL
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';


-- @block
CREATE TABLE RATING (
    ID VARCHAR(12),
    RATING_VALUE FLOAT NOT NULL,
    FOUND_USEFULL INT DEFAULT 0,
    DATE DATE NOT NULL,
    SSN CHAR(9) NOT NULL,
    PID VARCHAR(12) NOT NULL,
    CONSTRAINT RATING_PK PRIMARY KEY(ID),
    CONSTRAINT RATING_BUYER_FK FOREIGN KEY(SSN)
    REFERENCES BUYER(BUYER_SSN)
    ON UPDATE RESTRICT
    ON DELETE RESTRICT,
    CONSTRAINT RATING_PRODUCT_FK FOREIGN KEY(PID)
    REFERENCES PRODUCT(PID)
    ON UPDATE RESTRICT
    ON DELETE RESTRICT
);

-- @block
LOAD DATA LOCAL INFILE './data/RATING.csv'
INTO TABLE RATING
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE ADMIN(
    SSN CHAR(9) NOT NULL,
    ROLE VARCHAR(30) NOT NULL,
    INV_ID VARCHAR(12),
    CONSTRAINT ADMIN_PK PRIMARY KEY(SSN),
    CONSTRAINT ADMIN_STAFF_FK FOREIGN KEY(SSN)
    REFERENCES STAFF(SSN)
    ON UPDATE RESTRICT
    ON DELETE CASCADE
);

-- @block
CREATE TRIGGER TRIGGER_ADMIN_ROLE
BEFORE INSERT ON ADMIN
FOR EACH ROW
BEGIN
    IF NEW.ROLE NOT IN ('Content Manager',
                        'Marketing Manager',
                        'Customer Support Manager',
                        'Technical Manager',
                        'Analytics Manager',
                        'Payment and Shipping Manager',
                        'Sales Manager') 
    THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid ADMIN_ROLE.';
    END IF;
END;

-- @block
LOAD DATA LOCAL INFILE './data/ADMIN.csv'
INTO TABLE ADMIN
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';

-- @block
CREATE TABLE MANAGE(
    SSN CHAR(9),
    PID VARCHAR(12),
    CONSTRAINT MANAGE_PK PRIMARY KEY(SSN, PID),
    CONSTRAINT MANAGE_ADMIN_FK FOREIGN KEY(SSN) 
    REFERENCES ADMIN(SSN) 
    ON UPDATE RESTRICT 
    ON DELETE CASCADE,
    CONSTRAINT MANAGE_PRODUCT_CK FOREIGN KEY(PID)
    REFERENCES PRODUCT(PID)
    ON UPDATE RESTRICT
    ON DELETE CASCADE
);

-- @block
LOAD DATA LOCAL INFILE './data/MANAGE.csv'
INTO TABLE MANAGE
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';